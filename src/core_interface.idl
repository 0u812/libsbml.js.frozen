[Prefix="libsbml::"]
interface SpeciesReference {
  DOMString getId();
  DOMString getSpecies();
  long setSpecies(DOMString sid);
};

[Prefix="libsbml::"]
interface ModifierSpeciesReference {
  DOMString getId();
  DOMString getSpecies();
  long setSpecies(DOMString sid);
};

[Prefix="libsbml::"]
interface Species {
  DOMString getId();
  boolean setId(DOMString id);

  DOMString getName();
  long setName(DOMString name);

  long setInitialAmount(double amt);
  double getInitialAmount();
};

[Prefix="libsbml::"]
interface ASTNode {
  long getNumChildren();
  ASTNode getChild(long i);
};

[Prefix="libsbml::"]
interface KineticLaw {
  long setMath(ASTNode math);
};

[Prefix="libsbml::"]
interface SBMLFormulaParser {
  void SBMLFormulaParser();
  ASTNode parseL3Formula(DOMString formula);
  ASTNode parseFormula(DOMString formula);
};

[Prefix="libsbml::"]
interface Reaction {
  DOMString getId();
  long setId(DOMString id);

  long getNumReactants();
  long getNumProducts();
  long getNumModifiers();

  SpeciesReference getReactant(long i);
  SpeciesReference getProduct(long i);
  ModifierSpeciesReference getModifier(long i);

  long addReactant(SpeciesReference sr);
  long addProduct(SpeciesReference sr);

  SpeciesReference createReactant();
  SpeciesReference createProduct();
  ModifierSpeciesReference createModifier();

  KineticLaw createKineticLaw();
};

[Prefix="libsbml::"]
interface Compartment {
  DOMString getId();
  long setId(DOMString id);

  double getSize();
  long setSize(double val);

  double getVolume();
  long setVolume(double val);

  DOMString getUnits();
  long setUnits(DOMString units);
};

[Prefix="libsbml::"]
interface Model {
  DOMString getId();
  long setId(DOMString id);

  long getNumReactions();
  Reaction getReaction(long i);
  Reaction createReaction();

  Species createSpecies();
  Compartment createCompartment();
};

[Prefix="libsbml::"]
interface SBMLErrorLog {
// reserved word apparently. whoop-de-doo
//   DOMString toString();
};

[Prefix="libsbml::"]
interface SBMLDocument {
  void SBMLDocument(long level, long version);
  long getNumErrors();

  Model getModel();
  Model createModel();

  SBMLErrorLog getErrorLog();
};

[Prefix="libsbml::"]
interface SBMLReader {
  void SBMLReader();
  SBMLDocument readSBMLFromString(DOMString sbmlstr);
};

// different name req'd b/c libsbml version did not have consistent usage of types
[Prefix="libsbmljs::"]
interface SBMLWriter {
  void SBMLWriter();
  DOMString writeSBMLToString(SBMLDocument doc);
};
